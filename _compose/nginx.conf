server {
    # Escuta na porta 80 para conexões HTTP
    listen 80;
    
    # Configuração para aceitar qualquer nome de host (útil em ambientes dinâmicos)
    server_name _;  # Usado para qualquer hostname

    # Diretório raiz do servidor onde os arquivos estáticos serão procurados
    root /usr/share/nginx/html;
    
    # Define o arquivo padrão a ser servido se nenhum arquivo for especificado
    index index.html;

    # Bloquear acesso a arquivos ocultos (que começam com .)
    location ~ /\. {
        deny all;  # Impede o acesso a arquivos como .git, .env, etc.
    }

    # Configuração para servir arquivos estáticos do Django
    location ^~ /static/ {
        # Mapeia a URL /static/ para o diretório /app/staticfiles/ no sistema de arquivos
        alias /app/staticfiles/;
    }

    # Configuração para servir arquivos estáticos do React
    location ^~ /react_static/ {
        # Mapeia a URL /react_static/ para o diretório /usr/share/nginx/html/react_static/
        alias /usr/share/nginx/html/react_static/;
    }

    # Arquivos estáticos do React (como JS, CSS, imagens) terão cache de longo prazo
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
        expires 1y;  # Cache para 1 ano
        access_log off;  # Desativa o log de acesso para esses arquivos
        # Adiciona cabeçalho Cache-Control para instruir o navegador a manter os arquivos em cache por um ano
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Configuração para WebSocket
    location ~ ^/ws/ {
        # Proxy para o backend Django onde o WebSocket é tratado
        proxy_pass http://bittybiz_backend:8000;  # Ajuste a URL do backend conforme necessário
        
        # Permite a atualização do protocolo para WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;  # Permite o upgrade da conexão para WebSocket
        proxy_set_header Connection 'upgrade';  # Mantém a conexão aberta para WebSocket
        
        # Envia os cabeçalhos HTTP originais para o backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Passa tokens de CSRF e cookies do cliente para o backend
        proxy_set_header X-CSRFToken $http_x_csrf_token;
        proxy_set_header Cookie $http_cookie;
    }

    # Proxy para as APIs do Django e Admin
    location ~ ^/(api|admin)/ {
        # Proxy as requisições para a API e o admin Django para o backend
        proxy_pass http://bittybiz_backend:8000;  # Ajuste a URL do backend conforme necessário
        
        # Envia os cabeçalhos HTTP originais para o backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Passa tokens de CSRF e cookies do cliente para o backend
        proxy_set_header X-CSRFToken $http_x_csrf_token;
        proxy_set_header Cookie $http_cookie;
    }

    # Configuração para servir o frontend React (Single Page Application)
    location / {
        # Tenta servir arquivos estáticos primeiro, senão redireciona para o index.html (para SPA)
        try_files $uri $uri/ /index.html;
    }

    # Configuração de fallback para páginas de erro, redirecionando 404 para o index.html (SPA)
    error_page 404 /index.html;
}
